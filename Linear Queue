#include <stdio.h>
#include <stdlib.h>

int* queue;
int front = -1;
int rear = -1;
int max_size;

void enqueue(int element) {
    if (rear == max_size - 1) {
        printf("Queue Overflow: Cannot enqueue element '%d'. Queue is full.\n", element);
        return;
    }
    if (front == -1)
        front = 0;
    queue[++rear] = element;
    printf("Element '%d' enqueued into the queue.\n", element);
}

int dequeue() {
    if (front == -1 || front > rear) {
        printf("Queue Underflow: Cannot dequeue element. Queue is empty.\n");
        return -1;
    }
    return queue[front++];
}

void display() {
    if (front == -1 || front > rear) {
        printf("Queue is empty.\n");
        return;
    }
    printf("Queue elements:\n");
    for (int i = front; i <= rear; i++) {
        printf("%d\n", queue[i]);
    }
}

int main() {
    int choice, element;

    printf("Enter the maximum size of the queue: ");
    scanf("%d", &max_size);
    queue = (int*)malloc(max_size * sizeof(int));

    while (1) {
        printf("\nQueue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the element to enqueue: ");
                scanf("%d", &element);
                enqueue(element);
                break;
            case 2:
                element = dequeue();
                if (element != -1) {
                    printf("Dequeued element: %d\n", element);
                }
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting the program.\n");
                free(queue);
                exit(0);
            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    }

    return 0;
}
